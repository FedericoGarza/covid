{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started Python SDK to get information regarding the novel corona virus provided by Johns Hopkins university Full code on github Requirements python >= 3.6 How to install pip install covid Dependencies pydantic requests How to use from covid import Covid covid = Covid() covid.get_data()","title":"Getting Started"},{"location":"#getting-started","text":"Python SDK to get information regarding the novel corona virus provided by Johns Hopkins university Full code on github","title":"Getting Started"},{"location":"#requirements","text":"python >= 3.6","title":"Requirements"},{"location":"#how-to-install","text":"pip install covid","title":"How to install"},{"location":"#dependencies","text":"pydantic requests","title":"Dependencies"},{"location":"#how-to-use","text":"from covid import Covid covid = Covid() covid.get_data()","title":"How to use"},{"location":"install/","text":"Using Pip pip install covid","title":"Install"},{"location":"install/#using-pip","text":"pip install covid","title":"Using Pip"},{"location":"john_hopkins/","text":"by default Covid uses John Hopkins univeristy API as default so you can use: covid = Covid(source=\"john_hopkins\") or covid = Covid() Get All Data from covid import Covid covid = Covid() covid.get_data() result [ { 'id': '53', 'country': 'China', 'confirmed': 81020, 'active': 9960, 'deaths': 3217, 'recovered': 67843, 'latitude': 30.5928, 'longitude': 114.3055, 'last_update': 1584097775000 }, { 'id': '115', 'country': 'Italy', 'confirmed': 24747, 'active': 20603, 'deaths': 1809, 'recovered': 2335, 'latitude': 41.8719, 'longitude': 12.5674, 'last_update': 1584318130000 }, ... List Countries This comes in handy when you need to know the available names of countries when using get_status_by_country_name , eg. \"The Republic of Moldova\" or just \"Moldova\" So use this when you need to know the country exact name that you can use. countries = covid.list_countries() result [ {'id': '53', 'country': 'China'}, {'id': '115', 'country': 'Italy'} ... ] Get Status By Country ID italy_cases = covid.get_status_by_country_id(115) result { 'id': '115', 'country': 'Italy', 'confirmed': 24747, 'active': 20603, 'deaths': 1809, 'recovered': 2335, 'latitude': 41.8719, 'longitude': 12.5674, 'last_update': 1584318130000 } Get Status By Country Name italy_cases = covid.get_status_by_country_name(\"italy\") result { 'id': '115', 'country': 'Italy', 'confirmed': 24747, 'active': 20603, 'deaths': 1809, 'recovered': 2335, 'latitude': 41.8719, 'longitude': 12.5674, 'last_update': 1584318130000 } Get Total Active cases active = covid.get_total_active_cases() Get Total Confirmed cases confirmed = covid.get_total_confirmed_cases() Get Total Recovered cases recovered = covid.get_total_recovered() Get Total Deaths deaths = covid.get_total_deaths()","title":"John Hopkins University API"},{"location":"john_hopkins/#get-all-data","text":"from covid import Covid covid = Covid() covid.get_data() result [ { 'id': '53', 'country': 'China', 'confirmed': 81020, 'active': 9960, 'deaths': 3217, 'recovered': 67843, 'latitude': 30.5928, 'longitude': 114.3055, 'last_update': 1584097775000 }, { 'id': '115', 'country': 'Italy', 'confirmed': 24747, 'active': 20603, 'deaths': 1809, 'recovered': 2335, 'latitude': 41.8719, 'longitude': 12.5674, 'last_update': 1584318130000 }, ...","title":"Get All Data"},{"location":"john_hopkins/#list-countries","text":"This comes in handy when you need to know the available names of countries when using get_status_by_country_name , eg. \"The Republic of Moldova\" or just \"Moldova\" So use this when you need to know the country exact name that you can use. countries = covid.list_countries() result [ {'id': '53', 'country': 'China'}, {'id': '115', 'country': 'Italy'} ... ]","title":"List Countries"},{"location":"john_hopkins/#get-status-by-country-id","text":"italy_cases = covid.get_status_by_country_id(115) result { 'id': '115', 'country': 'Italy', 'confirmed': 24747, 'active': 20603, 'deaths': 1809, 'recovered': 2335, 'latitude': 41.8719, 'longitude': 12.5674, 'last_update': 1584318130000 }","title":"Get Status By Country ID"},{"location":"john_hopkins/#get-status-by-country-name","text":"italy_cases = covid.get_status_by_country_name(\"italy\") result { 'id': '115', 'country': 'Italy', 'confirmed': 24747, 'active': 20603, 'deaths': 1809, 'recovered': 2335, 'latitude': 41.8719, 'longitude': 12.5674, 'last_update': 1584318130000 }","title":"Get Status By Country Name"},{"location":"john_hopkins/#get-total-active-cases","text":"active = covid.get_total_active_cases()","title":"Get Total Active cases"},{"location":"john_hopkins/#get-total-confirmed-cases","text":"confirmed = covid.get_total_confirmed_cases()","title":"Get Total Confirmed cases"},{"location":"john_hopkins/#get-total-recovered-cases","text":"recovered = covid.get_total_recovered()","title":"Get Total Recovered cases"},{"location":"john_hopkins/#get-total-deaths","text":"deaths = covid.get_total_deaths()","title":"Get Total Deaths"},{"location":"worldometers/","text":"covid = Covid(source=\"worldometers\") Get Data covid.get_data() result [ { 'country': 'Malta', 'confirmed': 110, 'new_cases': 3, 'deaths': 0, 'recovered': 2, 'active': 108, 'critical': 1, 'total_cases_per_million': Decimal('249'), 'total_deaths_per_million': Decimal('0') }, { 'country': 'Cameroon', 'confirmed': 66, 'new_cases': 10, 'deaths': 0, 'recovered': 2, 'active': 64, 'critical': 0, 'total_cases_per_million': Decimal('2'), 'total_deaths_per_million': Decimal('0') }, ... ] Get Status By Country Name covid.get_status_by_country_name(\"italy\") result { 'country': 'Italy', 'confirmed': 69176, 'new_cases': 5249, 'deaths': 6820, 'recovered': 8326, 'active': 54030, 'critical': 3393, 'total_cases_per_million': Decimal('1144'), 'total_deaths_per_million': Decimal('113') } List Countries This comes in handy when you need to know the available names of countries when using get_status_by_country_name , eg. \"The Republic of Moldova\" or just \"Moldova\" So use this when you need to know the country exact name that you can use. countries = covid.list_countries() result [ 'china', 'italy', 'usa', 'spain', 'germany', ... ] Get Total Active cases active = covid.get_total_active_cases() Get Total Confirmed cases confirmed = covid.get_total_confirmed_cases() Get Total Recovered cases recovered = covid.get_total_recovered() Get Total Deaths deaths = covid.get_total_deaths()","title":"Worldometers.info (New)"},{"location":"worldometers/#get-data","text":"covid.get_data() result [ { 'country': 'Malta', 'confirmed': 110, 'new_cases': 3, 'deaths': 0, 'recovered': 2, 'active': 108, 'critical': 1, 'total_cases_per_million': Decimal('249'), 'total_deaths_per_million': Decimal('0') }, { 'country': 'Cameroon', 'confirmed': 66, 'new_cases': 10, 'deaths': 0, 'recovered': 2, 'active': 64, 'critical': 0, 'total_cases_per_million': Decimal('2'), 'total_deaths_per_million': Decimal('0') }, ... ]","title":"Get Data"},{"location":"worldometers/#get-status-by-country-name","text":"covid.get_status_by_country_name(\"italy\") result { 'country': 'Italy', 'confirmed': 69176, 'new_cases': 5249, 'deaths': 6820, 'recovered': 8326, 'active': 54030, 'critical': 3393, 'total_cases_per_million': Decimal('1144'), 'total_deaths_per_million': Decimal('113') }","title":"Get Status By Country Name"},{"location":"worldometers/#list-countries","text":"This comes in handy when you need to know the available names of countries when using get_status_by_country_name , eg. \"The Republic of Moldova\" or just \"Moldova\" So use this when you need to know the country exact name that you can use. countries = covid.list_countries() result [ 'china', 'italy', 'usa', 'spain', 'germany', ... ]","title":"List Countries"},{"location":"worldometers/#get-total-active-cases","text":"active = covid.get_total_active_cases()","title":"Get Total Active cases"},{"location":"worldometers/#get-total-confirmed-cases","text":"confirmed = covid.get_total_confirmed_cases()","title":"Get Total Confirmed cases"},{"location":"worldometers/#get-total-recovered-cases","text":"recovered = covid.get_total_recovered()","title":"Get Total Recovered cases"},{"location":"worldometers/#get-total-deaths","text":"deaths = covid.get_total_deaths()","title":"Get Total Deaths"}]}